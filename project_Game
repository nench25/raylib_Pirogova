#include "raylib.h"

void questionloop() {
	bool game = true;
	while (game) {
		BeginDrawing();
		DrawRectangle(100, 100, 600, 400, RAYWHITE);
		DrawText(TextFormat("perform the division of numbers"), 120, 120, 30, BLACK);
		DrawText(TextFormat("in the hexadecimal number system"), 120, 150, 30, BLACK);
		DrawText(TextFormat("1C4B / 31"), 140, 300, 40, BLACK);
		DrawText(TextFormat("a) 8D(1D)"), 470, 220, 30, BLACK);
		DrawText(TextFormat("b) 7(AB)"), 470, 280, 30, BLACK);
		DrawText(TextFormat("c) 8A(1D)"), 470, 340, 30, BLACK);
		DrawText(TextFormat("d) 9B(4CA)"), 470, 400, 30, BLACK);
		EndDrawing();
		if (IsKeyDown(KEY_A)) {
			BeginDrawing();
			DrawRectangle(470, 210, 170, 50, GREEN);
			EndDrawing();
			game = false;
		}
	}
}
void questionloop2() {
	bool game2 = true;
	while (game2) {
		BeginDrawing();
		DrawRectangle(100, 100, 600, 400, RAYWHITE);
		DrawText(TextFormat("convert the binary code to decimal"), 120, 120, 30, BLACK);
		DrawText(TextFormat("100100,10010 -> ?"), 140, 300, 30, BLACK);
		DrawText(TextFormat("a) -17,38"), 470, 220, 30, BLACK);
		DrawText(TextFormat("b) 36,785"), 470, 280, 30, BLACK);
		DrawText(TextFormat("c) 36,5625"), 470, 340, 30, BLACK);
		DrawText(TextFormat("d) 27,3286"), 470, 400, 30, BLACK);
		EndDrawing();
		if (IsKeyDown(KEY_A)) {
			BeginDrawing();
			DrawRectangle(470, 210, 170, 50, RED);
			EndDrawing();
		}
		if (IsKeyDown(KEY_B)) {
			BeginDrawing();
			DrawRectangle(470, 270, 170, 50, RED);
			EndDrawing();
		}
		if (IsKeyDown(KEY_C)) {
			BeginDrawing();
			DrawRectangle(470, 330, 170, 50, GREEN);
			EndDrawing();
			game2 = false;
		}
		if (IsKeyDown(KEY_D)) {
			BeginDrawing();
			DrawRectangle(470, 390, 170, 50, RED);
			EndDrawing();
		}
	}
}
void questionloop3() {
	bool game3 = true;
	while (game3) {
		BeginDrawing();
		DrawRectangle(250, 260, 300, 200, RAYWHITE);
		DrawText(TextFormat(""), 310, 280, 30, BLACK);
		EndDrawing();
		if (IsKeyPressed(KEY_ENTER)) {
			game3 = false;
		}
	}
}
void questionloop4() {
	bool game4 = true;
	while (game4) {
		BeginDrawing();
		DrawRectangle(250, 260, 300, 200, RAYWHITE);
		DrawText(TextFormat(""), 310, 280, 30, BLACK);
		EndDrawing();
		if (IsKeyPressed(KEY_ENTER)) {
			game4 = false;
		}
	}
}
int main() {

	InitWindow(800, 600, "My Game");
	int screenWidth = 800 / 2, screenHeight = 600 / 2;
	int playerX = 350, playerY = 500;
	int playerSize = 50;
	int playerSpeed = 10;
	int wall1_X = GetRandomValue(0, 750), wall1_Y = -50, wall1_Height = 50, wall1_Weight = 50, wall1_Speed = 5;
	int wall2_X = GetRandomValue(0, 750), wall2_Y = -50, wall2_Height = 50, wall2_Weight = 30, wall2_Speed = 10;
	int wall3_X = GetRandomValue(0, 750), wall3_Y = -50, wall3_Height = 50, wall3_Weight = 20, wall3_Speed = 2;
	int wall4_X = GetRandomValue(0, 750), wall4_Y = -50, wall4_Height = 50, wall4_Weight = 60, wall4_Speed = 13;
	int score = 0;

	SetTargetFPS(60);

	while (!WindowShouldClose()) {
		wall1_Y += wall1_Speed, wall2_Y += wall2_Speed, wall3_Y += wall3_Speed, wall4_Y += wall4_Speed;

		if (wall1_Y > 600) {
			wall1_Y = -50;
			wall1_X = GetRandomValue(0, 750);
			score += 1;
		}
		if (wall2_Y > 600) {
			wall2_Y = -50;
			wall2_X = GetRandomValue(0, 750);
			score += 1;
		}
		if (wall3_Y > 600) {
			wall3_Y = -50;
			wall3_X = GetRandomValue(0, 750);
			score += 1;
		}
		if (wall4_Y > 600) {
			wall4_Y = -50;
			wall4_X = GetRandomValue(0, 750);
			score += 1;
		}

		if (IsKeyDown(KEY_RIGHT) && playerX < 800 - playerSize) playerX += playerSpeed;
		if (IsKeyDown(KEY_LEFT) && playerX > 0) playerX -= playerSpeed;
		if (IsKeyDown(KEY_UP) && playerY > 0) playerY -= playerSpeed;
		if (IsKeyDown(KEY_DOWN) && playerY < 600 - playerSize) playerY += playerSpeed;

		Rectangle playerRec = { playerX, playerY, playerSize, playerSize };
		Rectangle wall1_Rec = { wall1_X, wall1_Y, wall1_Height, wall1_Weight };
		Rectangle wall2_Rec = { wall2_X, wall2_Y, wall2_Height, wall2_Weight };
		Rectangle wall3_Rec = { wall3_X, wall3_Y, wall3_Height, wall3_Weight };
		Rectangle wall4_Rec = { wall4_X, wall4_Y, wall4_Height, wall4_Weight };

		if (CheckCollisionRecs(playerRec, wall1_Rec)) {
			if (IsKeyDown(KEY_RIGHT)) playerX += playerSpeed;
			if (IsKeyDown(KEY_LEFT)) playerX -= playerSpeed;

			questionloop();
		}
		if (CheckCollisionRecs(playerRec, wall2_Rec)) {
			if (IsKeyDown(KEY_RIGHT)) playerX += playerSpeed;
			if (IsKeyDown(KEY_LEFT)) playerX -= playerSpeed;

			questionloop2();
		}
		if (CheckCollisionRecs(playerRec, wall3_Rec)) {
			if (IsKeyDown(KEY_RIGHT)) playerX += playerSpeed;
			if (IsKeyDown(KEY_LEFT)) playerX -= playerSpeed;

			questionloop3();

		}
		if (CheckCollisionRecs(playerRec, wall4_Rec)) {
			if (IsKeyDown(KEY_RIGHT)) playerX += playerSpeed;
			if (IsKeyDown(KEY_LEFT)) playerX -= playerSpeed;

			questionloop4();

		}

		BeginDrawing();
		ClearBackground(BLACK);

		DrawRectangle(playerX, playerY, playerSize, playerSize, BLUE);
		DrawRectangle(wall1_X, wall1_Y, wall1_Height, wall1_Weight, RED);
		DrawRectangle(wall2_X, wall2_Y, wall2_Height, wall2_Weight, ORANGE);
		DrawRectangle(wall3_X, wall3_Y, wall3_Height, wall3_Weight, WHITE);
		DrawRectangle(wall4_X, wall4_Y, wall4_Height, wall4_Weight, YELLOW);
		DrawText(TextFormat("Score: %i", score), 10, 10, 30, WHITE);
		EndDrawing();

	}

	CloseWindow();
	return 0;
}
